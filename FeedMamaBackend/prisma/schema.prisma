generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider          = "sqlserver"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model Users {
  UserId                 String       @id @db.UniqueIdentifier
  Email                  String
  LastName               String
  FirstName              String
  Phone                  String
  Password               String
  Address                String
  City                   String
  Role                   Int
  ZIP                    String
  Verified               Int?
  VerificationAttempts   Int?
  Address_AddressToUsers Address[]
  Orders                 Orders[]
  Payment                Payment[]
  Resturants             Resturants[]
}

model Resturants {
  RestaurantID      String   @id(map: "PK__Resturan__87454CB5BDBE43E9") @db.UniqueIdentifier
  OwnerUserID       String   @db.UniqueIdentifier
  Name              String   @db.VarChar(255)
  Description       String?  @db.VarChar(255)
  ImageUrl          String   @db.VarChar(1024)
  Address           String   @db.VarChar(255)
  AddressLineTwo    String?  @db.VarChar(255)
  City              String   @db.VarChar(255)
  State             String   @db.VarChar(255)
  ZIP               String   @db.VarChar(255)
  ProvidesFreeMeals Boolean?
  Phone             String   @db.NVarChar(255)
  Users             Users    @relation(fields: [OwnerUserID], references: [UserId], onUpdate: NoAction, map: "FK__Resturant__Owner__1DB06A4F")
  Meals             Meals[]
  Orders            Orders[]
}

model Meals {
  MealID       String       @id(map: "PK__Meals__ACF6A65DE9675996") @db.UniqueIdentifier
  RestaurantID String       @db.UniqueIdentifier
  Name         String       @db.VarChar(255)
  Description  String?      @db.VarChar(255)
  Price        Decimal      @db.Decimal(18, 0)
  Quantity     Int
  IsVegan      Boolean
  IsVegetarian Boolean
  Resturants   Resturants   @relation(fields: [RestaurantID], references: [RestaurantID], onUpdate: NoAction, map: "FK__Meals__Restauran__208CD6FA")
  OrderMeals   OrderMeals[]
}

model Payment {
  PaymentId  String   @id(map: "PK__Payment__9B556A38271F6635") @db.UniqueIdentifier
  UserId     String?  @db.UniqueIdentifier
  Number     String?  @db.VarChar(255)
  Expiration String?  @db.VarChar(255)
  CVC        String?  @db.VarChar(255)
  ZIP        String?  @db.VarChar(255)
  Primary    Boolean?
  Users      Users?   @relation(fields: [UserId], references: [UserId], onDelete: NoAction, onUpdate: NoAction, map: "Payment_Users")
  Orders     Orders[]
}

model Orders {
  OrderID          String       @id(map: "PK__Orders__C3905BAF094B8CA9") @db.UniqueIdentifier
  RestaurantID     String       @db.UniqueIdentifier
  UserID           String       @db.UniqueIdentifier
  PaymentID        String?      @db.UniqueIdentifier
  Total            Decimal      @db.Decimal(18, 0)
  Tip              Decimal      @db.Decimal(18, 0)
  DateTime         DateTime
  Address          String       @db.VarChar(255)
  TrackingURL      String?      @db.VarChar(255)
  SupportReference String?      @db.VarChar(255)
  Payment          Payment?     @relation(fields: [PaymentID], references: [PaymentId], onDelete: NoAction, onUpdate: NoAction, map: "FK__Orders__PaymentI__32AB8735")
  Resturants       Resturants   @relation(fields: [RestaurantID], references: [RestaurantID], onUpdate: NoAction, map: "FK__Orders__Restaura__30C33EC3")
  Users            Users        @relation(fields: [UserID], references: [UserId], onUpdate: NoAction, map: "FK__Orders__UserID__31B762FC")
  OrderMeals       OrderMeals[]
}

model OrderMeals {
  OrderMealID String  @id(map: "PK__OrderMea__450F23A2BF4F2682") @db.UniqueIdentifier
  OrderID     String  @db.UniqueIdentifier
  MealID      String  @db.UniqueIdentifier
  Quantity    Int
  Total       Decimal @db.Decimal(18, 0)
  Meals       Meals   @relation(fields: [MealID], references: [MealID], onUpdate: NoAction, map: "FK__OrderMeal__MealI__367C1819")
  Orders      Orders  @relation(fields: [OrderID], references: [OrderID], onUpdate: NoAction, map: "FK__OrderMeal__Order__3587F3E0")
}

model Address {
  AddressId        String   @id(map: "PK__Address__091C2AFB60F9B03F") @db.UniqueIdentifier
  UserId           String   @db.UniqueIdentifier
  PrimaryAddress   String?  @db.VarChar(255)
  SecondaryAddress String?  @db.VarChar(255)
  City             String?  @db.VarChar(255)
  State            String?  @db.VarChar(10)
  Zip              String?  @db.VarChar(10)
  Primary          Boolean?
  Users            Users    @relation(fields: [UserId], references: [UserId], onUpdate: NoAction, map: "Address_Users_FK")
}
